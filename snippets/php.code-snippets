{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"PHP File": {
		"prefix": "php",
		"body": [
			"<?php",
			"",
			"class $1",
			"{",
			"}"
		]
	},
	"PHP Constructor": {
		"scope": "php",
		"prefix": "ctor",
		"body": [
			"public function __construct()",
			"{",
			"}"
		],
		"description": "Generate construct function"
	},
	"PHP Class": {
		"scope": "php",
		"prefix": "cls",
		"body": [
			"class $1",
			"{",
			"}"
		],
		"description": "Create a PHP class"
	},
	"PHP Function": {
		"scope": "php",
		"prefix": "pubf",
		"body": [
			"public function $1()",
			"{",
			"}"
		],
		"description": "Public PHP function"
	},
	"PHP Private Function": {
		"scope": "php",
		"prefix": "prif",
		"body": [
			"private function $1()",
			"{",
			"}"
		],
		"description": "Private PHP function"
	},
	"PHP Protected Function": {
		"scope": "php",
		"prefix": "prif",
		"body": [
			"protected function $1()",
			"{",
			"}"
		],
		"description": "Protected PHP function"
	}
}
